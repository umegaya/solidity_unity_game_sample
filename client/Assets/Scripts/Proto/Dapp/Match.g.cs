// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Match.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ch {

  /// <summary>Holder for reflection information generated from Match.proto</summary>
  public static partial class MatchReflection {

    #region Descriptor
    /// <summary>File descriptor for Match.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtNYXRjaC5wcm90bxICY2gaDlNvbGlkaXR5LnByb3RvInwKBU1hdGNoEiEK",
            "B21lbWJlcnMYASADKAsyEC5jaC5NYXRjaC5NZW1iZXISFAoMd2lubmVyX2lu",
            "ZGV4GAIgASgNGjoKBk1lbWJlchIiCgd1c2VyX2lkGAEgASgLMhEuc29saWRp",
            "dHkuYWRkcmVzcxIMCgRkZWNrGAIgAygNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Solidity.SolidityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ch.Match), global::Ch.Match.Parser, new[]{ "Members", "WinnerIndex" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ch.Match.Types.Member), global::Ch.Match.Types.Member.Parser, new[]{ "UserId", "Deck" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Match : pb::IMessage<Match> {
    private static readonly pb::MessageParser<Match> _parser = new pb::MessageParser<Match>(() => new Match());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Match> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ch.MatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match(Match other) : this() {
      members_ = other.members_.Clone();
      winnerIndex_ = other.winnerIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Match Clone() {
      return new Match(this);
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ch.Match.Types.Member> _repeated_members_codec
        = pb::FieldCodec.ForMessage(10, global::Ch.Match.Types.Member.Parser);
    private readonly pbc::RepeatedField<global::Ch.Match.Types.Member> members_ = new pbc::RepeatedField<global::Ch.Match.Types.Member>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ch.Match.Types.Member> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "winner_index" field.</summary>
    public const int WinnerIndexFieldNumber = 2;
    private uint winnerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WinnerIndex {
      get { return winnerIndex_; }
      set {
        winnerIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Match);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Match other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!members_.Equals(other.members_)) return false;
      if (WinnerIndex != other.WinnerIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= members_.GetHashCode();
      if (WinnerIndex != 0) hash ^= WinnerIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      members_.WriteTo(output, _repeated_members_codec);
      if (WinnerIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(WinnerIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += members_.CalculateSize(_repeated_members_codec);
      if (WinnerIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WinnerIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Match other) {
      if (other == null) {
        return;
      }
      members_.Add(other.members_);
      if (other.WinnerIndex != 0) {
        WinnerIndex = other.WinnerIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 16: {
            WinnerIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Match message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Member : pb::IMessage<Member> {
        private static readonly pb::MessageParser<Member> _parser = new pb::MessageParser<Member>(() => new Member());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Member> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ch.Match.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Member() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Member(Member other) : this() {
          UserId = other.userId_ != null ? other.UserId.Clone() : null;
          deck_ = other.deck_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Member Clone() {
          return new Member(this);
        }

        /// <summary>Field number for the "user_id" field.</summary>
        public const int UserIdFieldNumber = 1;
        private global::Solidity.address userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Solidity.address UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "deck" field.</summary>
        public const int DeckFieldNumber = 2;
        private static readonly pb::FieldCodec<uint> _repeated_deck_codec
            = pb::FieldCodec.ForUInt32(18);
        private readonly pbc::RepeatedField<uint> deck_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> Deck {
          get { return deck_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Member);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Member other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(UserId, other.UserId)) return false;
          if(!deck_.Equals(other.deck_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (userId_ != null) hash ^= UserId.GetHashCode();
          hash ^= deck_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (userId_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(UserId);
          }
          deck_.WriteTo(output, _repeated_deck_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (userId_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
          }
          size += deck_.CalculateSize(_repeated_deck_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Member other) {
          if (other == null) {
            return;
          }
          if (other.userId_ != null) {
            if (userId_ == null) {
              userId_ = new global::Solidity.address();
            }
            UserId.MergeFrom(other.UserId);
          }
          deck_.Add(other.deck_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (userId_ == null) {
                  userId_ = new global::Solidity.address();
                }
                input.ReadMessage(userId_);
                break;
              }
              case 18:
              case 16: {
                deck_.AddEntriesFrom(input, _repeated_deck_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
